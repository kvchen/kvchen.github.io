{"version":3,"sources":["webpack:///./src/components/postSummary.js","webpack:///./src/templates/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js"],"names":["PostSummary","_ref","post","frontMatter","frontmatter","react","key","id","className","gatsby_browser_entry","to","path","title","datetime","date","excerpt","IndexPage","_group","pageContext","group","index","pageCount","previousUrl","toString","nextUrl","layout","map","node","filter","Boolean","role","postGenerationQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Nav","style","marginLeft","Header","_site$siteMetadata","site","siteMetadata","Layout","_data$site","_data$site$siteMetada","Helmet_default","lang","charSet","_3822847672","anObject","$flags","DESCRIPTORS","$toString","define","fn","RegExp","prototype","call","source","flags","R","this","concat","undefined","name","f","configurable","get"],"mappings":"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","file":"component---src-templates-index-js-e6bed9520053fd767d1b.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\n\nimport { Link } from 'gatsby';\nimport type { PostGenerationQuery_allMarkdownRemark_edges_node } from '../codegen/graphql/PostGenerationQuery';\n\ntype Props = {|\n  post: PostGenerationQuery_allMarkdownRemark_edges_node,\n|};\n\nexport default function PostSummary({ post }: Props) {\n  const frontMatter = post?.frontmatter;\n\n  return (\n    <article key={post?.id}>\n      <header className=\"post-header\">\n        <h2 className=\"post-title\">\n          <Link to={frontMatter?.path}>{frontMatter?.title}</Link>\n        </h2>\n        <h3>\n          <time datetime={frontMatter?.date}>{frontMatter?.date}</time>\n        </h3>\n      </header>\n\n      <section className=\"post-excerpt\">\n        <p>{post?.excerpt}</p>\n      </section>\n    </article>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\n\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport type { PostGenerationQuery_allMarkdownRemark } from '../codegen/graphql/PostGenerationQuery';\nimport PostSummary from '../components/postSummary';\n\ntype Props = {|\n  data: mixed,\n  pageContext: {|\n    group: $PropertyType<PostGenerationQuery_allMarkdownRemark, 'edges'>,\n    index: number,\n    pageCount: number,\n  |},\n|};\n\nexport default function IndexPage({ pageContext }: Props) {\n  const { group, index, pageCount } = pageContext;\n  const previousUrl = index - 1 === 1 ? '' : (index - 1).toString();\n  const nextUrl = (index + 1).toString();\n\n  return (\n    <Layout>\n      {(group ?? [])\n        .map(group => group?.node)\n        .filter(Boolean)\n        .map(post => (\n          <PostSummary post={post} />\n        ))}\n      <nav className=\"pagination\" role=\"navigation\">\n        {index === 0 ? (\n          <Link className=\"newer-posts\" to={nextUrl}>\n            &larr; Newer Posts\n          </Link>\n        ) : null}\n        <span className=\"page-number\">\n          Page {index} of {pageCount}\n        </span>\n        {index === pageCount - 1 ? (\n          <Link className=\"older-posts\" to={previousUrl}>\n            Older Posts &rarr;\n          </Link>\n        ) : null}\n      </nav>\n    </Layout>\n  );\n}\n\n// NOTE: This is just for Flow-typing and not actually executed.\n// Update this if the query in `gatsby-node.js` is changed.\nexport const postGenerationQuery = graphql`\n  query PostGenerationQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 300)\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// @flow\n\nimport * as React from 'react';\n\nimport { Link } from 'gatsby';\n\ntype Props = {||};\n\nexport default function Nav(props: Props) {\n  return (\n    <ul className=\"nav\">\n      <li>\n        <Link to=\"/\">Blog</Link>\n      </li>\n      <li style={{ marginLeft: 12 }}>\n        <Link to=\"/about/\">About</Link>\n      </li>\n    </ul>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\n\nimport type { HeaderSiteFragment } from '../codegen/graphql/HeaderSiteFragment';\nimport { Link } from 'gatsby';\nimport Nav from './nav';\nimport { graphql } from 'gatsby';\n\ntype Props = {|\n  site: ?HeaderSiteFragment,\n|};\n\nexport default function Header({ site }: Props) {\n  const title = site?.siteMetadata?.title || '';\n\n  return (\n    <header id=\"site-header\">\n      <div className=\"container\">\n        <h1 className=\"blog-title heading\">\n          <Link to=\"/\">{title}</Link>\n        </h1>\n        <Nav />\n      </div>\n    </header>\n  );\n}\n\nexport const headerFragment = graphql`\n  fragment HeaderSiteFragment on Site {\n    siteMetadata {\n      title\n    }\n  }\n`;\n","// @flow\n\nimport '../styles/main.scss';\n\nimport * as React from 'react';\n\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport Helmet from 'react-helmet';\nimport type { LayoutQuery } from '../codegen/graphql/LayoutQuery';\n\ntype Props = {|\n  children: React.Node,\n|};\n\nexport default function Layout({ children }: Props) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query LayoutQuery {\n          site {\n            ...HeaderSiteFragment\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={(data: LayoutQuery) => (\n        <>\n          <Helmet>\n            <html lang=\"en\" />\n            <meta charSet=\"utf-8\" />\n            <title>{data?.site?.siteMetadata?.title}</title>\n          </Helmet>\n          <Header site={data.site} />\n          <main className=\"content\" role=\"main\">\n            <div className=\"container\">\n              <div>{children}</div>\n            </div>\n          </main>\n        </>\n      )}\n    />\n  );\n}\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n"],"sourceRoot":""}