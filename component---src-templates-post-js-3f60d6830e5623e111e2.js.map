{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Post","render","data","this","props","markdownRemark","frontmatter","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","title","date","dangerouslySetInnerHTML","__html","html","PureComponent","postQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","_ref","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","key","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","nav_Nav","react","className","gatsby_browser_entry","to","style","marginLeft","header_Header","_site$siteMetadata","site","siteMetadata","id","layout_Layout","renderData","_data$site","_data$site$siteMetada","_this","Helmet_default","lang","charSet","role","_225374560"],"mappings":"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","file":"component---src-templates-post-js-3f60d6830e5623e111e2.js","sourcesContent":["// @flow\n\nimport Layout from '../components/layout';\nimport type { PostQuery } from '../codegen/graphql/PostQuery';\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\ntype Props = {|\n  data: PostQuery,\n|};\n\nexport default class Post extends React.PureComponent<Props> {\n  render() {\n    const { data } = this.props;\n    const markdownRemark = data?.markdownRemark;\n    const frontmatter = markdownRemark?.frontmatter;\n\n    return (\n      <Layout>\n        <h1>{frontmatter?.title}</h1>\n        <h2>\n          <time>{frontmatter?.date}</time>\n        </h2>\n        <div dangerouslySetInnerHTML={{ __html: markdownRemark?.html }} />\n      </Layout>\n    );\n  }\n}\n\nexport const postQuery = graphql`\n  query PostQuery($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        path\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// @flow\n\nimport * as React from 'react';\n\nimport { Link } from 'gatsby';\n\ntype Props = {||};\n\nexport default class Nav extends React.PureComponent<Props> {\n  render() {\n    return (\n      <ul className=\"nav\">\n        <li>\n          <Link to=\"/\">Blog</Link>\n        </li>\n        <li style={{ marginLeft: 12 }}>\n          <Link to=\"/about/\">About</Link>\n        </li>\n      </ul>\n    );\n  }\n}\n","// @flow\n\nimport * as React from 'react';\n\nimport type { HeaderSiteFragment } from '../codegen/graphql/HeaderSiteFragment';\nimport { Link } from 'gatsby';\nimport Nav from './nav';\nimport { graphql } from 'gatsby';\n\ntype Props = {|\n  site: ?HeaderSiteFragment,\n|};\n\nexport default class Header extends React.PureComponent<Props> {\n  render() {\n    const { site } = this.props;\n    const title = site?.siteMetadata?.title || '';\n\n    return (\n      <header id=\"site-header\">\n        <div className=\"container\">\n          <h1 className=\"blog-title heading\">\n            <Link to=\"/\">{title}</Link>\n          </h1>\n          <Nav />\n        </div>\n      </header>\n    );\n  }\n}\n\nexport const headerFragment = graphql`\n  fragment HeaderSiteFragment on Site {\n    siteMetadata {\n      title\n    }\n  }\n`;\n","// @flow\n\nimport '../styles/main.scss';\n\nimport * as React from 'react';\n\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport Helmet from 'react-helmet';\nimport type { LayoutQuery } from '../codegen/graphql/LayoutQuery';\n\ntype Props = {|\n  children: React.Node,\n|};\n\nexport default class Layout extends React.PureComponent<Props> {\n  renderData = (data: LayoutQuery): React.Node => {\n    const { children } = this.props;\n    return (\n      <>\n        <Helmet>\n          <html lang=\"en\" />\n          <meta charSet=\"utf-8\" />\n          <title>{data?.site?.siteMetadata?.title}</title>\n        </Helmet>\n        <Header site={data.site} />\n        <main className=\"content\" role=\"main\">\n          <div className=\"container\">\n            <div>{children}</div>\n          </div>\n        </main>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              ...HeaderSiteFragment\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={this.renderData}\n      />\n    );\n  }\n}\n"],"sourceRoot":""}