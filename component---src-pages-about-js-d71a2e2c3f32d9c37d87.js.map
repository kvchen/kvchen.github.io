{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["AboutPage","render","react__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","href","target","rel","React","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","props","createElement","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Nav","react","className","gatsby_browser_entry","to","style","marginLeft","Header","_site$siteMetadata","site","this","title","siteMetadata","id","nav_Nav","Layout","renderData","_data$site","_data$site$siteMetada","_this","Helmet_default","lang","charSet","header_Header","role","_225374560"],"mappings":"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","file":"component---src-pages-about-js-d71a2e2c3f32d9c37d87.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\n\nimport Layout from '../components/layout';\n\ntype Props = {||};\n\nexport default class AboutPage extends React.PureComponent<Props> {\n  render() {\n    return (\n      <Layout>\n        <h1>About Me</h1>\n        <p>\n          I'm Kevin, a recent graduate from the Electrical Engineering and\n          Computer Science program at UC Berkeley. I'm currently working at\n          Facebook as a software engineer and pursuing a part-time masters\n          degree from Stanford in AI/ML.\n        </p>\n        <p>\n          If you're trying to get in touch, my email is{' '}\n          <a href=\"ma&#105;lto&#58;%&#54;&#66;ef&#102;cat&#64;&#103;%&#54;D&#97;&#105;l&#46;com\">\n            ke&#102;fcat&#64;gmai&#108;&#46;com\n          </a>\n          . If you wish to encrypt your communications, you can find my\n          identities and public keys (including PGP) on{' '}\n          <a\n            href=\"https://keybase.io/kevinchen\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            my keybase\n          </a>\n          .\n        </p>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// @flow\n\nimport * as React from 'react';\n\nimport { Link } from 'gatsby';\n\ntype Props = {||};\n\nexport default class Nav extends React.PureComponent<Props> {\n  render() {\n    return (\n      <ul className=\"nav\">\n        <li>\n          <Link to=\"/\">Blog</Link>\n        </li>\n        <li style={{ marginLeft: 12 }}>\n          <Link to=\"/about/\">About</Link>\n        </li>\n      </ul>\n    );\n  }\n}\n","// @flow\n\nimport * as React from 'react';\n\nimport type { HeaderSiteFragment } from '../codegen/graphql/HeaderSiteFragment';\nimport { Link } from 'gatsby';\nimport Nav from './nav';\nimport { graphql } from 'gatsby';\n\ntype Props = {|\n  site: ?HeaderSiteFragment,\n|};\n\nexport default class Header extends React.PureComponent<Props> {\n  render() {\n    const { site } = this.props;\n    const title = site?.siteMetadata?.title || '';\n\n    return (\n      <header id=\"site-header\">\n        <div className=\"container\">\n          <h1 className=\"blog-title heading\">\n            <Link to=\"/\">{title}</Link>\n          </h1>\n          <Nav />\n        </div>\n      </header>\n    );\n  }\n}\n\nexport const headerFragment = graphql`\n  fragment HeaderSiteFragment on Site {\n    siteMetadata {\n      title\n    }\n  }\n`;\n","// @flow\n\nimport '../styles/main.scss';\n\nimport * as React from 'react';\n\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport Helmet from 'react-helmet';\nimport type { LayoutQuery } from '../codegen/graphql/LayoutQuery';\n\ntype Props = {|\n  children: React.Node,\n|};\n\nexport default class Layout extends React.PureComponent<Props> {\n  renderData = (data: LayoutQuery): React.Node => {\n    const { children } = this.props;\n    return (\n      <>\n        <Helmet>\n          <html lang=\"en\" />\n          <meta charSet=\"utf-8\" />\n          <title>{data?.site?.siteMetadata?.title}</title>\n        </Helmet>\n        <Header site={data.site} />\n        <main className=\"content\" role=\"main\">\n          <div className=\"container\">\n            <div>{children}</div>\n          </div>\n        </main>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              ...HeaderSiteFragment\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={this.renderData}\n      />\n    );\n  }\n}\n"],"sourceRoot":""}